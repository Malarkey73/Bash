install.packages("devtools")
install.packages("ggplot2")
install.packages("plyr")
install.packages("reshape2")
install.packages("leaps")
install.packages("caret")
library(devtools)
devtools::install_github("assertthat")
devtools::install_github("dplyr")
devtools::install_github("dplyr")
install.packages("RSQLite")
install.packages("RSQLite.extfuns")
install.packages("Rcpp")
install.packages("RcppArmadillo")
q()
library(devtools)
?install_github
?install
?install.github
library(devtools)
?install.github
?install_github
q()
(6376655+7691701)/195004190
(6376655+7691701)/(195004190*2)
1/16
(6376655+7691701)/(195004190)
.25*.25*.5
.25*.25*.5*2
(6376655+7691701)/(195004190-(95099*2))
29*.17
devtools::install_github("dplyr")
library(devtools)
?install_github
install_github(repo='fastqc', username='Malarkey73')
remove.packages("Rcpp")
remove.packages("RcppArmadillo")
library("Rcpp", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("RcppArmadillo", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
.libPaths()
remove.packages('Rcpp', libs="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?remove.packages
remove.packages('Rcpp', lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages('dplyr', lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages('plyr', lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
devtools::install_github("dplyr")
install.packages('Rcpp')
devtools::install_github("dplyr")
devtools::install_github("dplyr")
remove.packages("rstudio", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("RcppArmadillo", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("devtools", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("reshape2", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("Rcpp")
remove.packages("knitr", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("ggplot2", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("assertthat", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("BH", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("devtools")
devtools::install_github("assertthat")
devtools::install_github("dplyr")
install.packages(c("foreign", "lattice", "Matrix", "mgcv"), lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("devtools", lib.loc="/Users/rmgzshd/Library/R/3.0/library")
devtools::install_github("assertthat")
devtools::install_github("dplyr")
remove.packages("Rcpp")
remove.packages("RSQLite.extfuns", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("RSQLite", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("leaps", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("markdown", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("gridExtra", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
devtools::install_github("dplyr")
install.packages('devtools')
devtools::install_github("dplyr")
devtools::install_github("assertthat")
devtools::install_github("dplyr")
remove.packages("assertthat")
?remove.packages
.libPaths()
install.packages('devtools')
devtools::install_github("dplyr")
devtools::install_github("assertthat")
devtools::install_github("dplyr")
q()
remove.packages("Rcpp")
install.packages("Rcpp", type='source')
remove.packages("BH")
install.packages("RcppArmadillo", type='source')
devtools::install_github("dplyr")
devtools::install_github("fastqc")
?install_github
?devtools::install_github
devtools::install_github("fastqc", "Malarkey73")
install.packages('RcppArmadillo')
remove.packages("RcppArmadillo")
q()
install.packages('Rcpp', type='source')
install.packages('data.table', type='source')
install.packages('RSQLite', type='source')
install.packages('RSQLite.extfuns', type='source')
install.packages('sqldf', type='source')
q()
install.packages('sqldf', type='source')
library(sqldf)
library(LRI)
?bedToBins
?outerBedBins
?bedToBins
?LRI
??bedToBins
devtools()
library(devtools)
remove.packages("LRI")
.P.adjust
?p.adjust
q()
require(ggplot2)
theme(theme_bw())
theme_set(theme_bw())
setwd("~/Desktop")
read.table('q.txt')
read.table('q.txt', sep='\t')
read.table('q.txt', sep=' ')
read.table('q.txt')
read.table('q.txt', header=T)
read.table('q.txt', header=T, fill=T)
DF= read.table('q.txt', header=T, fill=T)
DF
DF$date
DF= read.table('q.txt', header=T, fill=T, colClasses=c('numeric', 'Date', 'factor', 'numeric', 'numeric'))
DF
DF$date
class(DF$date)
library(ggplot2)
qplot(date,Runtime, data=DF)
set_theme(theme_bw())
theme_set(theme_bw())
qplot(date,Runtime, data=DF)
qplot(date,Runtime, geom='line',data=DF)
qplot(date,Runtime, geom='line',data=DF)+geom_point(x=date,y=BuildChange)
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date,y=BuildChange))
qplot(date,Runtime, geom='line',data=DF)+geom_rug(aes(x=BuildChange))
qplot(date,Runtime, geom='line',data=DF)+geom_rug(aes(x=date,y=BuildChange))
qplot(date,Runtime, geom='line',data=DF)+geom_rug(aes(x=date[!is.na(BuildChange)]))
qplot(date,Runtime, geom='line',data=DF)+geom_rug(aes(x=BuildChange))
DF2=DF[!is.na(DF$BuildChange), ]
DF2
?geom_rug
qplot(date,Runtime, geom='line',data=DF)+geom_rug(aes(x=date, data=DF2))
DF2=DF
DF$cols="red"
DF$cols[is.na(DF$BuildChange)]="white"
DF
qplot(date,Runtime, geom='line',data=DF)+geom_rug(aes(x=date, colour=cols))
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date, y=BuildChange)
)
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date, y=BuildChange+500))
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date, y=BuildChange+800))
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date, y=BuildChange+750))
DF= read.table('q.txt', header=T, fill=T, colClasses=c('numeric', 'Date', 'factor', 'numeric', 'numeric'))
library(ggplot2)
theme_set(theme_bw())
m=max(DF$Runtime)
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date, y=BuildChange+m+5))
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date, y=BuildChange+m+5, col="red"))
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date, y=BuildChange+m+5, col=I("red")))
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date, y=BuildChange+m+5, col=I(red)))
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date, y=BuildChange+m+5))
DF2=structure(list(date = structure(1:28, .Label = c("2013-07-16",
"2013-07-17", "2013-07-18", "2013-07-19", "2013-07-20", "2013-07-24",
"2013-07-25", "2013-07-26", "2013-07-27", "2013-07-31", "2013-08-01",
"2013-08-02", "2013-08-03", "2013-08-07", "2013-08-08", "2013-08-09",
"2013-08-10", "2013-08-14", "2013-08-15", "2013-08-16", "2013-08-17",
"2013-08-21", "2013-08-22", "2013-08-23", "2013-08-24", "2013-08-28",
"2013-08-29", "2013-08-30", "2013-08-31", "2013-09-04", "2013-09-05",
"2013-09-06", "2013-09-07", "2013-09-11", "2013-09-12", "2013-09-13",
"2013-09-18", "2013-09-19", "2013-09-20", "2013-09-21", "2013-09-25",
"2013-09-26", "2013-09-27", "2013-09-28", "2013-10-02", "2013-10-03",
"2013-10-04", "2013-10-05", "2013-10-09", "2013-10-10", "2013-10-11",
"2013-10-12", "2013-10-16", "2013-10-17", "2013-10-18", "2013-10-19",
"2013-10-23", "2013-10-24", "2013-10-25", "2013-10-26", "2013-10-30",
"2013-10-31", "2013-11-01", "2013-11-02", "2013-11-06", "2013-11-07",
"2013-11-08", "2013-11-09"), class = "factor"), build = structure(c(1L,
2L, 2L, 3L, 3L, 4L, 4L, 4L, 4L, 5L, 5L, 5L, 5L, 6L, 6L, 6L, 6L,
7L, 7L, 7L, 7L, 8L, 8L, 8L, 8L, 9L, 9L, 9L), .Label = c("build-2013-07-09-1332",
"build-2013-07-15-0510", "build-2013-07-18-1644",
"build-2013-07-22-0510", "build-2013-07-29-0510",
"build-2013-08-05-0510", "build-2013-08-13-1329",
"build-2013-08-20-0510", "build-2013-08-27-0510",
"build-2013-09-03-1340", "build-2013-09-10-1326",
"build-2013-09-17-0510", "build-2013-09-26-0510",
"build-2013-10-08-1359", "build-2013-10-14-0510",
"build-2013-10-18-1437", "build-2013-10-18-1437-PLUS-11259-11737",
"build-2013-10-28-0510", "build-2013-11-04-0510"
), class = "factor"), Runtime = c(672.918, 696.924, 736.72, 693.206,
699.332, 712.388, 711.573, 715.223, 715.18, 717.888, 716.315,
719.216, 716.073, 717.566, 723.644, 720.374, 726.145, 710.658,
715.002, 718.742, 727.297, 711.684, 714.743, 715.815, 726.467,
742.33, 746.352, 749.55)), .Names = c("date", "build", "Runtime"
), row.names = c(2L, 4L, 6L, 8L, 10L, 12L, 14L, 16L, 18L, 20L,
22L, 24L, 26L, 28L, 30L, 32L, 34L, 36L, 38L, 40L, 42L, 44L, 46L,
48L, 50L, 52L, 54L, 55L), class = "data.frame")
DF2
qplot(date,Runtime, geom='line',data=DF2)+geom_point(aes(x=date, y=BuildChange+m+5))
qplot(date,Runtime, geom='line',data=DF)+geom_point(aes(x=date, y=BuildChange+m+5))
dir()
setwd("~/Bash/RScripts")
dir()
bedGraph=dir()[3]
segWidth=500
require(dplyr)
out=paste0(bedGraph,'.seg')
out
?system
sysCom=paste("wc -l", out)
system(paste("wc -l", out))
ans=system(paste("wc -l", out))
ans[1]
system(paste("wc -l", out), intern=T)
dir()
out=dir()[3]
system(paste("wc -l", out), intern=T)
system(paste("wc -l", out| sed /^[^\d]*(\d+)/), intern=T)
system(paste("wc -l", out,"| sed /^[^\d]*(\d+)/"), intern=T)
system(paste("wc -l", out, "| sed 's/[^0-9.]*\([0-9.]*\).*/\1/'"), intern=T)
?paste
system(paste("wc -l", out, "| sed 's/[^0-9.]*\\([0-9.]*\\).*/\\1/'"), intern=T)
numRow=as.numeric(system(paste("wc -l", out, "| sed 's/[^0-9.]*\\([0-9.]*\\).*/\\1/'"), intern=T))
numRow
?read.table
out
bedGraph
out=paste0(bedGraph,'.seg')
# to speed up long read i use bash to get the number of rows so mem can be preallocated
numRow=as.numeric(system(paste("wc -l", bedGraph, "| sed 's/[^0-9.]*\\([0-9.]*\\).*/\\1/'"), intern=T))
BG=read.table(bedGraph, nrows=numRow, col.names=c('chr', 'start', 'end', 'score'), colClasses=c('character', rep('integer',3)))
tail(BG)
head(BG)
BG=mutate(BG, startSeg=floor(((start+end)/2)/segWidth)*segWidth, endSeg=startSeg+500)
# and aggregate for per chr per bin score
BG=summarise(group_by(BG, chr, startSeg, endSeg), score=mean(score))
BG=read.table(bedGraph, nrows=numRow, col.names=c('chr', 'start', 'end', 'score'), colClasses=c('character', rep('integer',3)))
system.time(BG=mutate(BG, startSeg=floor(((start+end)/2)/segWidth)*segWidth, endSeg=startSeg+500))
system.time((BG=mutate(BG, startSeg=floor(((start+end)/2)/segWidth)*segWidth, endSeg=startSeg+500)))
system.time((BG=summarise(group_by(BG, chr, startSeg, endSeg), score=mean(score))))
system.time((write.table(BG, file=out, sep='\t', quote=F, row.names=F, col.names=F)))
?data.table
?as.data.table
??data.table
library(sqldf)
f<-file(bedGraph)
system.time(bigdf <- sqldf("select * from f", dbname = tempfile(), file.format = list(header = F, row.names = F)))
system.time((BG=read.table(bedGraph, nrows=numRow, col.names=c('chr', 'start', 'end', 'score'), colClasses=c('character', rep('integer',3))))
)
system('ls -sh')
require(data.table)
?fread
system.time((BG=fread(bedGraph, nrows=numRow, header=F, colClasses=colClasses=c('character', rep('integer',3)))))
system.time((BG=fread(bedGraph, nrows=numRow, header=F, colClasses=c('character', rep('integer',3)))))
head(BG)
colnames(BG)
colnames(BG)=c('chr', 'start', 'end', 'score')
head(BG)
system.time((BG=fread(bedGraph, nrows=numRow, header=F, colClasses=c('character', rep('integer',3)))))
colnames(BG)
setnames(BG, colnames(BG), c('chr', 'start', 'end', 'score'))
head(BG)
system.time((BG=mutate(BG, startSeg=floor(((start+end)/2)/segWidth)*segWidth, endSeg=startSeg+500)))
system.time((BG=summarise(group_by(BG, chr, startSeg, endSeg), score=mean(score))))
system.time((write.table(BG, file=out, sep='\t', quote=F, row.names=F, col.names=F)))
rm(bigdf)
rm(f)
BG=read.table(bedGraph, nrows=numRow, col.names=c('chr', 'start', 'end', 'score'), colClasses=c('character', rep('integer',3)))
system.time((BG=read.table(bedGraph, nrows=numRow, col.names=c('chr', 'start', 'end', 'score'), colClasses=c('character', rep('integer',3)))))
system.time((BG=fread(bedGraph, nrows=numRow, header=F, colClasses=c('character', rep('integer',3)))))
1e7
1e7/3
1e7/10
1e7/100
1e7/1000
object.size(BG)
system.time((BG=read.table(bedGraph, nrows=numRow, col.names=c('chr', 'start', 'end', 'score'), colClasses=c('character', rep('integer',3)))))
object.size(BG)
difftime(as.Date("2007-01-01"),as.Date("2006-12-31"),units="weeks")
difftime(as.Date("2007-01-01"),as.Date("2006-12-31"),units="weeks")
-> D
difftime(as.Date("2007-01-01"),as.Date("2006-12-31"),units="weeks")->D
D
class(D)
?difftime
??lubridate
library(lubridate)
install.package("lubridate")
install.packages("lubridate")
library(lubridate)
??lubridate
week(D)
as.Date("2007-01-01")-as.Date("2006-12-31")
sd_vec<-runif(10,0,20)
?rnorm
sd_vec=letters(1:10)
sd_vec=letters[1:10]
let_vec=letters[1:10]
n=10
replicate(n,paste(a,b))
a=letters[10:1]
replicate(n,paste(a,b))
replicate(n,paste(a,vec))
replicate(n,paste(a,sd_vec))
sd_vec=0:5
rnorm(10, mean=1, sd=sd_vec)
sd_vec
?rnorm
sd_vec=repc((0,1),5)
sd_vec=rep(c(0,1),5)
sd_vec
n=10
replicate(n, rnorm(5, mean=0, sd=sd_vec))
sd_vec=rep(c(0,1),3)
sd_vec
n=4
replicate(n, rnorm(4, mean=0, sd=sd_vec))
sd_vec=rep(c(0,1),3)
sd_vec
n=6
replicate(n, rnorm(4, mean=0, sd=sd_vec))
replicate(n, rnorm(6, mean=0, sd=sd_vec))
setwd("~/Bash/RScripts")
source('~/Bash/RScripts/bedSeg.R')
setwd("~/Bash/RScripts")
L=list(a="a", b="b", c="c")
lapply(L, names)
by(L, names)
?by
structure(list(ID = structure(c(12L, 12L, 12L, 12L, 12L, 12L,
12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L,
12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 8L, 8L, 8L, 8L,
8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L,
8L, 8L, 8L, 8L), .Label = c("B0F", "B12T", "B1T", "B21T", "B22F",
"B26T", "B2F", "B33F", "B3F", "B4F", "B7F", "P1", "P21", "P24",
"P25", "P27", "P28", "P29"), class = "factor"), ph = c(6.8, 7.1,
7, 7.01, 7.01, 6.97, 6.82, 6.9, 7.08, 6.87, 6.95, 6.78, 6.9,
7.07, 6.71, 6.95, 6.74, 6.63, 6.78, 6.91, 6.84, 6.8, 6.76, 6.9,
6.96, 6.94, 7, 6.94, 6.91, 6.76, 6.76, 6.82, 6.86, 6.68, 6.79,
6.79, 6.81, 6.84, 6.64, 6.81, 6.82, 6.88, 6.76, 6.72, 6.68, 6.8,
6.76, 6.76, 6.82, 7.3, 6.87, 6.87), EC = c(1840L, 940L, 820L,
1035L, 767L, 951L, 971L, 443L, 950L, 799L, 980L, 990L, 964L,
949L, 920L, 925L, 1000L, 856L, 898L, 625L, 838L, 2170L, 1499L,
881L, 870L, 891L, 860L, 877L, 1094L, 1986L, 2030L, 886L, 2160L,
1356L, 2090L, 2210L, 2070L, 2130L, 2050L, 2060L, 2080L, 2170L,
2140L, 1303L, 2100L, 2170L, 1499L, 2120L, 2050L, 2160L, 2180L,
2270L), Cl = c(132L, 102L, 111L, 108L, 99L, 90L, 109L, 100L,
90L, 99L, 98L, 90L, 120L, 110L, 97L, 97L, 97L, 136L, 115L, 100L,
100L, 280L, 460L, 110L, 91L, 88L, 81L, 88L, 349L, 333L, 362L,
300L, 330L, 310L, 380L, 330L, 380L, 340L, 260L, 240L, 280L, 250L,
320L, 280L, 290L, 280L, 460L, 240L, 210L, 260L, 280L, 260L),
Ca = c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 69L,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, 260L)), .Names = c("ID",
"ph", "EC", "Cl", "Ca"), row.names = c(1L, 3L, 5L, 7L, 9L, 11L,
13L, 15L, 17L, 19L, 21L, 23L, 25L, 27L, 29L, 31L, 33L, 35L, 37L,
39L, 41L, 43L, 45L, 47L, 49L, 51L, 53L, 55L, 848L, 850L, 852L,
854L, 856L, 858L, 860L, 862L, 864L, 866L, 868L, 870L, 872L, 874L,
876L, 878L, 880L, 882L, 884L, 886L, 888L, 890L, 892L, 894L), class = "data.frame")
structure(list(ID = structure(c(12L, 12L, 12L, 12L, 12L, 12L,
12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L,
12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 8L, 8L, 8L, 8L,
8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L,
8L, 8L, 8L, 8L), .Label = c("B0F", "B12T", "B1T", "B21T", "B22F",
"B26T", "B2F", "B33F", "B3F", "B4F", "B7F", "P1", "P21", "P24",
"P25", "P27", "P28", "P29"), class = "factor"), ph = c(6.8, 7.1,
7, 7.01, 7.01, 6.97, 6.82, 6.9, 7.08, 6.87, 6.95, 6.78, 6.9,
7.07, 6.71, 6.95, 6.74, 6.63, 6.78, 6.91, 6.84, 6.8, 6.76, 6.9,
6.96, 6.94, 7, 6.94, 6.91, 6.76, 6.76, 6.82, 6.86, 6.68, 6.79,
6.79, 6.81, 6.84, 6.64, 6.81, 6.82, 6.88, 6.76, 6.72, 6.68, 6.8,
6.76, 6.76, 6.82, 7.3, 6.87, 6.87), EC = c(1840L, 940L, 820L,
1035L, 767L, 951L, 971L, 443L, 950L, 799L, 980L, 990L, 964L,
949L, 920L, 925L, 1000L, 856L, 898L, 625L, 838L, 2170L, 1499L,
881L, 870L, 891L, 860L, 877L, 1094L, 1986L, 2030L, 886L, 2160L,
1356L, 2090L, 2210L, 2070L, 2130L, 2050L, 2060L, 2080L, 2170L,
2140L, 1303L, 2100L, 2170L, 1499L, 2120L, 2050L, 2160L, 2180L,
2270L), Cl = c(132L, 102L, 111L, 108L, 99L, 90L, 109L, 100L,
90L, 99L, 98L, 90L, 120L, 110L, 97L, 97L, 97L, 136L, 115L, 100L,
100L, 280L, 460L, 110L, 91L, 88L, 81L, 88L, 349L, 333L, 362L,
300L, 330L, 310L, 380L, 330L, 380L, 340L, 260L, 240L, 280L, 250L,
320L, 280L, 290L, 280L, 460L, 240L, 210L, 260L, 280L, 260L),
Ca = c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 69L,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, 260L)), .Names = c("ID",
"ph", "EC", "Cl", "Ca"), row.names = c(1L, 3L, 5L, 7L, 9L, 11L,
13L, 15L, 17L, 19L, 21L, 23L, 25L, 27L, 29L, 31L, 33L, 35L, 37L,
39L, 41L, 43L, 45L, 47L, 49L, 51L, 53L, 55L, 848L, 850L, 852L,
854L, 856L, 858L, 860L, 862L, 864L, 866L, 868L, 870L, 872L, 874L,
876L, 878L, 880L, 882L, 884L, 886L, 888L, 890L, 892L, 894L), class = "data.frame")->DF
head(DF)
DF$ID
sd_vec=rep(c(0,1),3)
sd_vec
n=5
replicate(n, rnorm(4, mean=0, sd=sd_vec))
replicate(n, 1:4)
